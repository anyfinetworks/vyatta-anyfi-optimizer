tag:
priority: 999
type: txt
help: Anyfi Optimizer

end:
     if [ ${COMMIT_ACTION} != SET ]; then
         echo -n "Stopping anyfi optimizer:"
         sudo kill -TERM $(sudo cat /var/run/anyfi-optimizer-$VAR(@).pid)
         TUNIF=$(grep nat_if0 /etc/anyfi-optimizer-$VAR(@).conf | sed -e 's|^.*tun/\([^ ]*\).*$|\1|')
         if [ -n "$VAR(breakout/policy/route/@)" ]; then
             sudo /opt/vyatta/sbin/vyatta-firewall.pl --update-interfaces \
                     delete $TUNIF in $VAR(breakout/policy/route/@) "policy route"
         fi
         sudo ip tuntap del dev $TUNIF mode tun 2> /dev/null
         sudo rm -f /etc/anyfi-optimizer-$VAR(@).conf
         echo " anyfi-optimizer."
     fi
     if [ ${COMMIT_ACTION} != DELETE ]; then
         # Setup and config file generation
         sudo /opt/vyatta/sbin/vyatta-anyfi-optimizer.pl \
                 --instance=$VAR(@) --config=/etc/anyfi-optimizer-$VAR(@).conf || exit 1 

         # Make sure settings passed on command line are set
         if [ -z "$VAR(controller/@)" ]; then
            echo "Error configuring anyfi optimizer: must specify controller."
            exit 1
         fi
         if [ -z "$VAR(port-range/@)" ]; then
            echo "Error configuring anyfi optimizer: must specify UDP port range."
            exit 1
         fi

         # Extract first UDP port for command line option
         port_range=$(/bin/cli-shell-api returnValue service anyfi optimizer $VAR(@) port-range)
         first_port=$(echo $port_range | cut -d- -f1)

         # Start the daemon
         # TODO: server -> controller
         echo -n "Starting anyfi optimizer:"
         sudo /usr/sbin/anyfi-optimizer --accept-license -s $VAR(controller/@) -p $first_port -B \
                 -P /var/run/anyfi-optimizer-$VAR(@).pid /etc/anyfi-optimizer-$VAR(@).conf || exit 1
         echo " anyfi-optimizer."
     fi

